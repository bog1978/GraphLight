<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:GraphLight.Converters"
    xmlns:drawing="clr-namespace:GraphLight.Drawing"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">

    <ControlTemplate x:Key="EdgeTemplate" TargetType="{x:Type drawing:Edge}">
        <Grid Background="{x:Null}">
            <Grid.Resources>
                <converters:PointsToQuadraticBezierConverter x:Key="BezierConverter" />
            </Grid.Resources>
            <i:Interaction.Behaviors>
                <ei:DataStateBehavior
                    Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                    FalseState="SelectionOff"
                    TrueState="SelectionOn"
                    Value="True" />
                <ei:DataStateBehavior
                    Binding="{Binding Path=IsHighlighted, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                    FalseState="HighlightOff"
                    TrueState="HighlightOn"
                    Value="True" />
            </i:Interaction.Behaviors>
            <Path
                x:Name="arrow"
                Data="{Binding Data.Points, Converter={StaticResource BezierConverter}}"
                StrokeThickness="{Binding Data.Thickness}">
                <!--  BUG: Если привязать Stroke={Binding StrokeBrush}, то в WPF валится с ошибкой: Не удается анимировать (Stroke).(0) в постоянном экземпляре объекта.  -->
                <Path.Stroke>
                    <SolidColorBrush Color="{Binding Data.Color}" />
                </Path.Stroke>
            </Path>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SelectedStates">
                    <VisualState x:Name="SelectionOn">
                        <Storyboard />
                    </VisualState>
                    <VisualState x:Name="SelectionOff" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="HighlightedStates">
                    <VisualState x:Name="HighlightOn">
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetName="arrow"
                                Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"
                                To="Red"
                                Duration="00:00:00" />
                            <DoubleAnimation
                                Storyboard.TargetName="arrow"
                                Storyboard.TargetProperty="StrokeThickness"
                                To="3"
                                Duration="00:00:00" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HighlightOff" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="HoverStates">
                    <VisualState x:Name="MouseEnter">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="arrow"
                                Storyboard.TargetProperty="StrokeThickness"
                                To="3"
                                Duration="00:00:00" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseLeave" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <Style TargetType="drawing:Edge">
        <Setter Property="Canvas.ZIndex" Value="{Binding Data.ZIndex}" />
        <Setter Property="IsSelected" Value="{Binding Data.IsSelected}" />
        <Setter Property="IsHighlighted" Value="{Binding Data.IsHighlighted}" />
        <Setter Property="Template" Value="{StaticResource EdgeTemplate}" />
    </Style>

</ResourceDictionary>