using System.Windows.Media;

COMPILER GRAPH

IGNORECASE

CHARACTERS

	tab                = '\u0009'. /*  9 = tabulator */
	eol                = '\u000a'. /* 10 = line feed */
	cr                 = '\u000d'. /* 13 = carriage return */
	newLine            = cr + eol. /* Line separator character (U+2028) + Paragraph separator character (U+2029) */

	letter             = 'A' .. 'Z' + 'a' .. 'z' + '_'.
	digit              = "0123456789".
	hexDigit           = digit + "ABCDEFabcdef".
	notDigit           = ANY - digit.

	char               = ANY - "'" - '\\' - newLine.
	verbatimStringChar = ANY - '"'.
	regularStringChar  = ANY - '"' - '\\' - newLine.
	notNewLine         = ANY - newLine .
	ws                 = " " + tab + '\u000b' + '\u000c'. /* Any character with Unicode class Zs */

TOKENS

	ident = letter { letter | digit }.
	digraph = "digraph".
	lbrace = "{".
	rbrace = "}".
	lbrack = "[".
	rbrack = "]".
	arrow = "->".
	assgn  = "=".
	string = "\"" {verbatimStringChar} "\"".
	label  = "label".
	rank   = "rank".
	order  = "order".
	color  = "color".
	category = "category".
	thickness = "thickness".
	weight = "weight".
	number = digit {digit}["." digit {digit}].
	argb = "#" hexDigit hexDigit hexDigit hexDigit hexDigit hexDigit hexDigit hexDigit.

COMMENTS FROM "/*" TO "*/"
COMMENTS FROM "//" TO eol

IGNORE eol + cr + tab

PRODUCTIONS

GRAPH = digraph ident (. createGraph(t.val); .)
	lbrace
		[NODES]
		EDGES
	rbrace.

NODES = "nodes:"
	{
		ident (. createNode(); .)
		[NODE_ATTRS] ";"
	}.

NODE_ATTRS = 
	lbrack
		[label assgn string (. setNodeLabel(); .)]
		[rank assgn number (. setNodeRank(); .)]
		[order assgn number (. setNodePosition(); .)]
		[category assgn string (. setNodeCategory(); .)]
	rbrack.

EDGES = 
	"edges:"
	{
		ident (. createEdgeChain(); .)		
		EDGE {EDGE} [EDGE_ATTRS] ";"
	}.

EDGE = arrow ident (. createEdge(); .).

EDGE_ATTRS = (. Color edgeColor; .)
	lbrack
		[color assgn COLOR<out edgeColor> (. setColor(edgeColor); .)]
		[thickness assgn number (. setThickness(); .)]
		[weight assgn number (. setWeight(); .)]			
	rbrack.

COLOR<out Color color> (. color = Colors.Black; .)
	= "Black" (. color = Colors.Black; .)
	| "Blue" (. color = Colors.Blue; .)
	| "Brown" (. color = Colors.Brown; .)
	| "Cyan" (. color = Colors.Cyan; .)
	| "DarkGray" (. color = Colors.DarkGray; .)
	| "Gray" (. color = Colors.Gray; .)
	| "Green" (. color = Colors.Green; .)
	| "LightGray" (. color = Colors.LightGray; .)
	| "Magenta" (. color = Colors.Magenta; .)
	| "Orange" (. color = Colors.Orange; .)
	| "Purple" (. color = Colors.Purple; .)
	| "Red" (. color = Colors.Red; .)
	| "Transparent" (. color = Colors.Transparent; .)
	| "White" (. color = Colors.White; .)
	| "Yellow" (. color = Colors.Yellow; .)
	| argb (. color = stringToColor(t.val);	.)
	.

END GRAPH.